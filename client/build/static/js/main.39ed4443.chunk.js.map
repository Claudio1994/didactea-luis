{"version":3,"sources":["css/home.css","App.js","serviceWorker.js","index.js"],"names":["module","exports","colorWhite","bgColorRebeccapurple","marginTop5","marginTop10","marginTop15","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getImages","axios","get","then","data","setState","images","products","catch","error","console","log","state","react_default","a","createElement","class","className","concat","styles","type","id","for","href","placeholder","map","image","key","src","alt","name","description","height","width","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39ed4443.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorWhite\":\"_1yg0P5Z5filfe3jWGoK5tx\",\"bgColorRebeccapurple\":\"_9ua1LTFXc3JrLoAvrf6K2\",\"marginTop5\":\"_1QZrCuW2mTSOTAZZqFz7Ks\",\"marginTop10\":\"_1UiS45eYcnnwF5CTplyQqD\",\"marginTop15\":\"_1ia3gLvLFud5HNQxoyaFWW\"};","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport styles from './css/home.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      images: []\n    }\n\n    //this.getImages = this.getImages.bind(this);\n    this.getImages();\n  }\n\n  getImages = () => {\n    axios.get('/api/product')\n      .then((data)=>{\n        this.setState({\n          images: data.data.products\n        });\n      })\n      .catch((error) =>{\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"top-fixed\">\n        <header className={`ae-container-fluid ae-container-fluid--full rk-header ${styles.bgColorRebeccapurple}`}>\n          <input type=\"checkbox\" id=\"mobile-menu\" class=\"rk-mobile-menu\"/>\n          <label for=\"mobile-menu\">\n            <svg>\n              <use href=\"assets/img/symbols.svg#bar\"></use>\n            </svg>\n            <svg>\n              <use href=\"assets/img/symbols.svg#bar\"></use>\n            </svg>\n            <svg>\n              <use href=\"assets/img/symbols.svg#bar\"></use>\n            </svg>\n          </label>\n          <div class=\"ae-container-fluid rk-topbar\">\n            <h1 className={`rk-logo ${styles.colorWhite}`} ><a href=\"index.html\">Juguetes Didactea</a></h1>\n            <nav class=\"rk-navigation\">\n              <ul class=\"rk-menu\">\n                <li className={`active rk-menu__item ${styles.colorWhite}`}><a href=\"index.html\" class=\"rk-menu__link\">Inicio</a>\n                </li>\n                <li class={`rk-menu__item ${styles.colorWhite}`}><a href=\"contact.html\" class=\"rk-menu__link\">Contacto</a>\n                </li>\n              </ul>\n              <form class=\"rk-search\">\n                <input type=\"text\" placeholder=\"Search\" id=\"urku-search\" class=\"rk-search-field\"/>\n                <label for=\"urku-search\">\n                  <svg>\n                    <use href=\"assets/img/symbols.svg#icon-search\"></use>\n                  </svg>\n                </label>\n              </form>\n            </nav>\n          </div>\n        </header>\n        <section class=\"ae-container-fluid rk-main\">\n        <section class={`ae-container-fluid ae-container-fluid--inner rk-portfolio ${styles.marginTop15}`}>\n        <div  class=\"ae-masonry ae-masonry-md-2 ae-masonry-xl-4\">\n\n        {this.state.images && \n          this.state.images.map((image)=>{\n          return(\n            <a key=\"image.id\" href=\"portfolio-item.html\" class=\"rk-item ae-masonry__item\">\n              <img src={`/uploads/${image.image}`} alt=\"\"/>\n              <div class=\"item-meta\">\n                <h2>{image.name}</h2>\n                <p>{image.description}</p>\n              </div>\n            </a>);\n          \n        })}\n        </div>\n        </section>\n        </section>\n        <footer class=\"ae-container-fluid rk-footer \">\n          <div class=\"ae-grid ae-grid--collapse\">\n            <div class=\"ae-grid__item item-lg-4 au-xs-ta-center au-lg-ta-left\">\n              <p class=\"rk-footer__text rk-footer__copy \"> <span class=\"ae-u-bold\">Â© </span><span class=\"ae-u-bolder\">Juguestes Didactea </span>Todos los derechos reservados.</p>\n            </div>\n            <div class=\"ae-grid__item item-lg-4 au-xs-ta-center\">\n              <a href=\"https://www.facebook.com/Juguetes-Didactea-385429638896603/\">\n                <img src=\"/img/facebook.png\" height=\"50px\" width=\"50px\"></img>\n              </a>\n            </div>\n            <div class=\"ae-grid__item item-lg-4 au-xs-ta-center au-lg-ta-right\">\n              <p class=\"rk-footer__text rk-footer__contact \"> <span class=\"ae-u-bold\">Email: </span><span class=\"ae-u-bolder\"> <a href=\"#0\" class=\"rk-dark-color \">contacto@gmail.com </a></span></p>\n            </div>\n          </div>\n        </footer>\n      </div>\n    ); //fin render\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}